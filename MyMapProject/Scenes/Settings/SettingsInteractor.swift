//
//  SettingsInteractor.swift
//  MyMapProject
//
//  Created by Enes Kılıç on 31.10.2021.
//  Copyright (c) 2021 Enes Kılıç. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsBusinessLogic {
    func notifyViewDidLoad()
    func setIsShowAllUnitsSelected(with isSwitchOn: Bool)
    func setShowAll(isSwitchOn: Bool)
    func setGeodesicCorrection(with isSwitchOn: Bool)
    func setBatterySaving(with isSwitchOn: Bool)
    func setLowDataSwitch(with isSwitchOn: Bool)
//    func doSomethingElse(request: Settings.SomethingElse.Request)
}

protocol SettingsDataStore {
    // var name: String { get set }
}

class SettingsInteractor: SettingsBusinessLogic, SettingsDataStore {
    var presenter: SettingsPresentationLogic?
    var worker: SettingsRealmsWorker?
    // var name: String = ""

    // MARK: Do something (and send response to SettingsPresenter)

    func setIsShowAllUnitsSelected(with isSwitchOn: Bool) {
        worker = SettingsRealmsWorker()
        worker?.setIsShowAllUnitsSelected(with: isSwitchOn)

        let response = Settings.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func notifyViewDidLoad() {
        worker = SettingsRealmsWorker()
        worker?.getShowDistancesBetweenTwoCorners()

        let response = Settings.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func setShowAll(isSwitchOn: Bool) {
        worker = SettingsRealmsWorker()
        worker?.setShowAll(isSwitchOn: isSwitchOn)
    }
    
    func setGeodesicCorrection(with isSwitchOn: Bool) {
        worker = SettingsRealmsWorker()
        worker?.setGeodesicCorrection(with: isSwitchOn)
    }
    
    func setBatterySaving(with isSwitchOn: Bool) {
        worker = SettingsRealmsWorker()
        worker?.setBatterySaving(with: isSwitchOn)
    }
    
    func setLowDataSwitch(with isSwitchOn: Bool) {
        worker = SettingsRealmsWorker()
        worker?.setLowDataSwitch(with: isSwitchOn)
    }
    
//
//    func doSomethingElse(request: Settings.SomethingElse.Request) {
//        worker = IsShowAllUnitsSelectedWorker()
//        worker?.doSomeOtherWork()
//
//        let response = Settings.SomethingElse.Response()
//        presenter?.presentSomethingElse(response: response)
//    }
}
